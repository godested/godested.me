{"version":3,"file":"component---src-templates-cv-regular-index-tsx-5da82a5cd6d9cab5532f.js","mappings":"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","sources":["webpack://godested-site/./src/assets/icons/attachment.inline.svg","webpack://godested-site/./src/assets/icons/browse.inline.svg","webpack://godested-site/./src/assets/icons/download.inline.svg","webpack://godested-site/./src/assets/icons/location.inline.svg","webpack://godested-site/./src/assets/icons/mail.inline.svg","webpack://godested-site/./src/assets/icons/phone.inline.svg","webpack://godested-site/./node_modules/gatsby-plugin-google-gtag/index.js","webpack://godested-site/./src/components/page/page.component.tsx","webpack://godested-site/./src/components/cv/cv.provider.tsx","webpack://godested-site/./src/components/cv/types.ts","webpack://godested-site/./src/components/gatsby-asset-image/types.ts","webpack://godested-site/./src/components/gatsby-asset-image/gatsby-asset-image.module.scss","webpack://godested-site/./src/components/gatsby-asset-image/gastby-asset-image.component.tsx","webpack://godested-site/./src/templates/cv-regular/aside/block.component.tsx","webpack://godested-site/./src/templates/cv-regular/aside/block.module.scss","webpack://godested-site/./src/templates/cv-regular/aside/list.module.scss","webpack://godested-site/./src/templates/cv-regular/aside/list.component.tsx","webpack://godested-site/./src/templates/cv-regular/aside/aside.module.scss","webpack://godested-site/./src/templates/cv-regular/aside/aside.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/main-block.module.scss","webpack://godested-site/./src/components/svg-defs/svg-defs.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/company-icon.module.scss","webpack://godested-site/./src/templates/cv-regular/main-block/company-icon.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/dates.ts","webpack://godested-site/./src/templates/cv-regular/main-block/education.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/education.module.scss","webpack://godested-site/./src/templates/cv-regular/main-block/experience.module.scss","webpack://godested-site/./src/templates/cv-regular/main-block/experience.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/main-block.component.tsx","webpack://godested-site/./src/templates/cv-regular/download-button.component.tsx","webpack://godested-site/./src/templates/cv-regular/download-button.module.scss","webpack://godested-site/./src/templates/cv-regular/cv.component.tsx","webpack://godested-site/./src/templates/cv-regular/cv.module.scss","webpack://godested-site/./src/templates/cv-regular/index.tsx"],"sourcesContent":["var publicPath = __webpack_public_path__;\n                    var symbolUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#attachment.inline--RD46m';\n                    var viewUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#view-attachment.inline--RD46m';\n\n                    \n\n                    module.exports = {\n                        url: publicPath + symbolUrl,\n                        view: publicPath + viewUrl,\n                        viewBox: '0 0 8 8',\n                        title: '',\n                        toString: function () {\n                            return JSON.stringify(this.view);\n                        }\n                    };","var publicPath = __webpack_public_path__;\n                    var symbolUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#browse.inline--IWnP7';\n                    var viewUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#view-browse.inline--IWnP7';\n\n                    \n\n                    module.exports = {\n                        url: publicPath + symbolUrl,\n                        view: publicPath + viewUrl,\n                        viewBox: '0 0 20 20',\n                        title: '',\n                        toString: function () {\n                            return JSON.stringify(this.view);\n                        }\n                    };","var publicPath = __webpack_public_path__;\n                    var symbolUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#download.inline--lppqf';\n                    var viewUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#view-download.inline--lppqf';\n\n                    \n\n                    module.exports = {\n                        url: publicPath + symbolUrl,\n                        view: publicPath + viewUrl,\n                        viewBox: '0 0 24 24',\n                        title: '',\n                        toString: function () {\n                            return JSON.stringify(this.view);\n                        }\n                    };","var publicPath = __webpack_public_path__;\n                    var symbolUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#location.inline--cNxtd';\n                    var viewUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#view-location.inline--cNxtd';\n\n                    \n\n                    module.exports = {\n                        url: publicPath + symbolUrl,\n                        view: publicPath + viewUrl,\n                        viewBox: '0 0 18 20',\n                        title: '',\n                        toString: function () {\n                            return JSON.stringify(this.view);\n                        }\n                    };","var publicPath = __webpack_public_path__;\n                    var symbolUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#mail.inline--B5F1R';\n                    var viewUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#view-mail.inline--B5F1R';\n\n                    \n\n                    module.exports = {\n                        url: publicPath + symbolUrl,\n                        view: publicPath + viewUrl,\n                        viewBox: '0 0 20 18',\n                        title: '',\n                        toString: function () {\n                            return JSON.stringify(this.view);\n                        }\n                    };","var publicPath = __webpack_public_path__;\n                    var symbolUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#phone.inline--w8QU6';\n                    var viewUrl = 'sprites.eb19faf52ebc027602ec82bfeedc5666.svg#view-phone.inline--w8QU6';\n\n                    \n\n                    module.exports = {\n                        url: publicPath + symbolUrl,\n                        view: publicPath + viewUrl,\n                        viewBox: '0 0 20 20',\n                        title: '',\n                        toString: function () {\n                            return JSON.stringify(this.view);\n                        }\n                    };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OutboundLink = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _excluded = [\"children\"];\n\nvar OutboundLink = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  return /*#__PURE__*/_react.default.createElement(\"a\", (0, _extends2.default)({\n    ref: ref\n  }, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === \"function\") {\n        props.onClick(e);\n      }\n\n      var redirect = true;\n\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n\n      if (props.target && props.target.toLowerCase() !== \"_self\") {\n        redirect = false;\n      }\n\n      if (window.gtag) {\n        window.gtag(\"event\", \"click\", {\n          event_category: \"outbound\",\n          event_label: props.href,\n          transport_type: redirect ? \"beacon\" : \"\",\n          event_callback: function event_callback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }), children);\n});\n\nexports.OutboundLink = OutboundLink;\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};","import { PropsWithChildren, ReactElement } from 'react';\nimport { Helmet } from 'react-helmet';\n\nexport type PageProps = Readonly<\n  PropsWithChildren<{\n    title?: string;\n  }>\n>;\n\nexport function Page({ title, children }: PageProps): ReactElement {\n  return (\n    <>\n      <Helmet\n        title={title}\n        defaultTitle=\"@godested\"\n        titleTemplate=\"%s · @godested\"\n      >\n        <html lang=\"en\" />\n      </Helmet>\n      {children}\n    </>\n  );\n}\n","import { createContext, PropsWithChildren, ReactElement } from 'react';\nimport { createUseContext } from 'utils';\nimport { CV } from './types';\n\nexport const CVContext = createContext<CV | undefined>(undefined);\n\ntype CVProviderProps = Readonly<PropsWithChildren<{ cv: CV }>>;\n\nexport function CVProvider({ children, cv }: CVProviderProps): ReactElement {\n  return <CVContext.Provider value={cv}>{children}</CVContext.Provider>;\n}\n\nexport const useCV = createUseContext(CVContext);\n","import { Typography } from 'components/typography';\nimport { GatsbyImageAsset } from 'components/gatsby-asset-image';\nimport { assertNever } from 'utils';\n\nexport type CV = Readonly<{\n  profile: CV.Profile;\n  contacts: readonly CV.Contact[];\n  socials: readonly CV.Social[];\n  languages: readonly CV.Language[];\n  body: readonly CV.Content[];\n  pdfURL: string;\n}>;\n\nexport namespace CV {\n  export type Profile = Readonly<{\n    name: string;\n    position: string;\n    avatar: GatsbyImageAsset;\n  }>;\n\n  export enum ContactType {\n    Email = 'email',\n    Phone = 'phone',\n    Location = 'location',\n    Site = 'site',\n  }\n\n  export namespace ContactType {\n    export function toLabel(type: ContactType): string {\n      switch (type) {\n        case ContactType.Email:\n          return 'Email';\n        case ContactType.Phone:\n          return 'Phone';\n        case ContactType.Location:\n          return 'Location';\n        case ContactType.Site:\n          return 'Website';\n        default:\n          return assertNever(type);\n      }\n    }\n  }\n\n  export type Contact = Readonly<{\n    type: ContactType;\n    value: string;\n  }>;\n\n  export type Social = Readonly<{\n    icon: GatsbyImageAsset;\n    profileURL: string;\n    username: string;\n    name: string;\n  }>;\n\n  export type Language = Readonly<{\n    icon: GatsbyImageAsset;\n    countryCode: string;\n    name: string;\n    level: string;\n  }>;\n\n  export type Content = Text | Experience | Education;\n\n  export enum ContentType {\n    Text = 'text',\n    Experience = 'experience',\n    Education = 'education',\n  }\n\n  type CommonContent<T extends ContentType, D> = Readonly<{\n    type: T;\n    title: string;\n    data: readonly D[];\n  }>;\n\n  export type InnerContentDataType<\n    T extends CommonContent<ContentType, unknown>,\n  > = T extends CommonContent<ContentType, infer D> ? D : never;\n\n  export type Text = CommonContent<ContentType.Text, Paragraph>;\n\n  export type Experience = CommonContent<\n    ContentType.Experience,\n    {\n      companyName: string;\n      companyLogo: GatsbyImageAsset;\n      position: string;\n      description: readonly Paragraph[];\n      dateStarted: number | string;\n      dateEnded?: number | string;\n      location: string;\n      companyURL?: string;\n    }\n  >;\n\n  export type Education = CommonContent<\n    ContentType.Education,\n    {\n      courseName: string;\n      companyLogo: GatsbyImageAsset;\n      dateStarted: number | string;\n      dateEnded?: number | string;\n      companyURL?: string;\n      description?: string;\n      certificateURL?: string;\n    }\n  >;\n\n  export type Paragraph = Readonly<{\n    text: string;\n    variant?: Typography.Variant;\n    color?: Typography.Color;\n    weight?: Typography.Weight;\n  }>;\n}\n","import { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type GatsbyImageAsset = GatsbyImageAsset.SVG | GatsbyImageAsset.Image;\n\nexport namespace GatsbyImageAsset {\n  export type SVG = Readonly<{\n    extension: 'svg';\n    publicURL: string;\n    svg?: {\n      content: string;\n    };\n    childSvgSprites?: SVGSource;\n  }>;\n\n  export type Image = Readonly<{\n    extension: string;\n    childImageSharp: { gatsbyImageData: ImageDataLike };\n  }>;\n\n  export function isSVG(asset: GatsbyImageAsset): asset is SVG {\n    return asset.extension === 'svg';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var svgContainer = \"_1fb5d\";","import { GatsbyImage, GatsbyImageProps, getImage } from 'gatsby-plugin-image';\nimport classNames from 'classnames';\nimport { InlineSVG } from 'components/inline-svg';\nimport { unwrap } from 'utils';\nimport { PropsOf } from 'types';\nimport { GatsbyImageAsset } from './types';\nimport * as styles from './gatsby-asset-image.module.scss';\n\nexport type GatsbyAssetImageProps = Readonly<{\n  source: GatsbyImageAsset;\n  alt: string;\n}> &\n  Omit<GatsbyImageProps, 'image'>;\n\nexport function GatsbyAssetImage({\n  source,\n  alt,\n  ...restProps\n}: GatsbyAssetImageProps) {\n  if (GatsbyImageAsset.isSVG(source)) {\n    if (source.svg) {\n      return (\n        <div\n          dangerouslySetInnerHTML={{ __html: source.svg.content }}\n          {...restProps}\n          className={classNames(styles.svgContainer, restProps.className)}\n        />\n      );\n    }\n\n    return source.childSvgSprites ? (\n      <InlineSVG\n        source={source.childSvgSprites}\n        {...(restProps as PropsOf<'svg'>)}\n      />\n    ) : (\n      <img src={source.publicURL} alt={alt} {...restProps} />\n    );\n  }\n\n  return (\n    <GatsbyImage\n      image={unwrap(\n        getImage(source.childImageSharp.gatsbyImageData),\n        `Couldn't get image ${alt}`,\n      )}\n      alt={alt}\n      {...restProps}\n    />\n  );\n}\n","import { PropsWithChildren, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { WithOptionalClassNameProps } from 'types';\nimport { isSomething } from 'utils';\nimport { Typography } from 'components/typography';\nimport * as styles from './block.module.scss';\n\ntype AsideBlockProps = Readonly<\n  { title?: string } & PropsWithChildren<WithOptionalClassNameProps>\n>;\n\nexport function AsideBlock({\n  children,\n  className,\n  title,\n}: AsideBlockProps): ReactElement {\n  return (\n    <section className={classNames(styles.block, className)}>\n      {isSomething(title) && (\n        <Typography\n          as=\"h3\"\n          variant={Typography.Variant.CaptionSM}\n          fontColor={Typography.Color.DarkGray}\n          className={styles.title}\n        >\n          {title}\n        </Typography>\n      )}\n      {children}\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var block = \"_3890f\";\nexport var title = \"_5e45a\";","// extracted by mini-css-extract-plugin\nexport var asideList = \"a6f5c\";\nexport var asideListItem = \"d6af2\";\nexport var itemWithIcon = \"a4ff7\";\nexport var itemWithIconContent = \"_7ac5e\";\nexport var itemWithIconIcon = \"c10ce\";","import {\n  Children,\n  ElementType,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport classNames from 'classnames';\nimport { PolymorphicComponentProps, WithOptionalClassNameProps } from 'types';\nimport * as styles from './list.module.scss';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function AsideList({ children }: PropsWithChildren<{}>): ReactElement {\n  return (\n    <ul className={styles.asideList}>\n      {Children.map(children, (child, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <li key={index} className={styles.asideListItem}>\n          {child}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport namespace AsideList {\n  export function ItemWithIcon<T extends ElementType>(\n    props: PolymorphicComponentProps<\n      T,\n      PropsWithChildren<{\n        icon: ReactNode;\n      }>\n    > &\n      WithOptionalClassNameProps,\n  ): ReactElement {\n    const {\n      as: ComponentToRender = 'div',\n      children,\n      className,\n      icon,\n      ...restProps\n    } = props;\n\n    return (\n      <ComponentToRender\n        className={classNames(styles.itemWithIcon, className)}\n        {...restProps}\n      >\n        <div className={styles.itemWithIconIcon}>{icon}</div>\n        <div className={styles.itemWithIconContent}>{children}</div>\n      </ComponentToRender>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var aside = \"ad15f\";\nexport var asideContent = \"_9716a\";\nexport var contactLink = \"_568f0\";\nexport var contactLinkHoverable = \"bff24\";\nexport var flagIcon = \"_2efc3\";\nexport var iconContainer = \"_76c13\";\nexport var iconContainerIcon = \"_74a8c\";\nexport var position = \"_32432\";\nexport var profileAvatar = \"_5e1ec\";\nexport var socialIcon = \"_4945e\";\nexport var themeChangingDuration = \"200\";","import { ElementType, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { PropsOf, WithAdditionalClassNameProps } from 'types';\nimport { Typography } from 'components/typography';\nimport { GatsbyAssetImage } from 'components/gatsby-asset-image';\nimport { assertNever } from 'utils';\nimport { InlineSVG } from 'components/inline-svg';\nimport locationIcon from 'assets/icons/location.inline.svg';\nimport mailIcon from 'assets/icons/mail.inline.svg';\nimport phoneIcon from 'assets/icons/phone.inline.svg';\nimport browseIcon from 'assets/icons/browse.inline.svg';\nimport { CV, useCV } from 'components/cv';\nimport { AsideBlock } from './block.component';\nimport { AsideList } from './list.component';\nimport * as styles from './aside.module.scss';\n\nexport function AsideComponent({\n  asideClassName,\n}: WithAdditionalClassNameProps<['asideClassName']>): ReactElement {\n  const { profile, contacts, socials, languages } = useCV();\n\n  return (\n    <div className={classNames(styles.aside, asideClassName)}>\n      <div className={styles.asideContent}>\n        <AsideBlock>\n          <GatsbyAssetImage\n            source={profile.avatar}\n            alt={profile.name}\n            className={styles.profileAvatar}\n          />\n          <Typography\n            as=\"h2\"\n            variant={Typography.Variant.Heading}\n            fontWeight={Typography.Weight.Medium}\n            fontColor={Typography.Color.Black}\n          >\n            {profile.name}\n          </Typography>\n          <Typography\n            as=\"h2\"\n            variant={Typography.Variant.Title}\n            fontWeight={Typography.Weight.Medium}\n            className={styles.position}\n          >\n            {profile.position}\n          </Typography>\n        </AsideBlock>\n        <AsideBlock title=\"Contacts\">\n          <AsideList>\n            {contacts\n              .map(\n                (contact) =>\n                  [contact, resolveContactRenderData(contact)] as const,\n              )\n              .map(([contact, itemProps]) => (\n                <AsideList.ItemWithIcon\n                  icon={\n                    <span className={styles.iconContainer}>\n                      <ContactIcon\n                        type={contact.type}\n                        role=\"img\"\n                        className={styles.iconContainerIcon}\n                      />\n                    </span>\n                  }\n                  key={contact.type}\n                  {...itemProps}\n                  className={classNames(\n                    styles.contactLink,\n                    itemProps.className,\n                  )}\n                >\n                  <Typography\n                    variant={Typography.Variant.CaptionSM}\n                    fontColor={Typography.Color.LightGray}\n                  >\n                    {CV.ContactType.toLabel(contact.type)}\n                  </Typography>\n                  <Typography\n                    as=\"h5\"\n                    variant={Typography.Variant.ParagraphSM}\n                    fontWeight={Typography.Weight.Medium}\n                  >\n                    {itemProps.children}\n                  </Typography>\n                </AsideList.ItemWithIcon>\n              ))}\n          </AsideList>\n        </AsideBlock>\n        <AsideBlock title=\"Socials\">\n          <AsideList>\n            {socials.map(({ name, profileURL, username, icon }) => (\n              <AsideList.ItemWithIcon\n                icon={\n                  <GatsbyAssetImage\n                    source={icon}\n                    alt={name}\n                    className={styles.socialIcon}\n                  />\n                }\n                as=\"a\"\n                href={profileURL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classNames(\n                  styles.contactLink,\n                  styles.contactLinkHoverable,\n                )}\n                key={name}\n              >\n                <Typography\n                  variant={Typography.Variant.CaptionSM}\n                  fontColor={Typography.Color.LightGray}\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  variant={Typography.Variant.ParagraphSM}\n                  fontWeight={Typography.Weight.Medium}\n                >\n                  {username}\n                </Typography>\n              </AsideList.ItemWithIcon>\n            ))}\n          </AsideList>\n        </AsideBlock>\n        <AsideBlock title=\"Languages\">\n          <AsideList>\n            {languages.map(({ name, level, icon, countryCode }) => (\n              <AsideList.ItemWithIcon\n                icon={\n                  <GatsbyAssetImage\n                    source={icon}\n                    alt={countryCode}\n                    className={styles.flagIcon}\n                  />\n                }\n                key={name}\n              >\n                <Typography\n                  as=\"h5\"\n                  variant={Typography.Variant.ParagraphSM}\n                  fontColor={Typography.Color.DarkGray}\n                  fontWeight={Typography.Weight.Medium}\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  variant={Typography.Variant.CaptionSM}\n                  fontColor={Typography.Color.LightGray}\n                >\n                  {level}\n                </Typography>\n              </AsideList.ItemWithIcon>\n            ))}\n          </AsideList>\n        </AsideBlock>\n      </div>\n    </div>\n  );\n}\n\nfunction resolveContactRenderData(\n  contact: CV.Contact,\n): { as: ElementType } & PropsOf<'a' | 'div'> {\n  const { type, value } = contact;\n\n  switch (type) {\n    case CV.ContactType.Email:\n      return {\n        as: 'a',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        href: `mailto:${value}`,\n        className: styles.contactLinkHoverable,\n        children: value,\n      };\n    case CV.ContactType.Phone:\n      return {\n        as: 'a',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        href: `tel:${value.replace(/\\s/g, '')}`,\n        className: styles.contactLinkHoverable,\n        children: value,\n      };\n    case CV.ContactType.Site:\n      return {\n        as: 'a',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        href: value,\n        className: styles.contactLinkHoverable,\n        children: new URL(value).host,\n      };\n    case CV.ContactType.Location:\n      return {\n        as: 'div',\n        children: value,\n      };\n    default:\n      return assertNever(type);\n  }\n}\n\nfunction ContactIcon({\n  type,\n  ...props\n}: Readonly<{ type: CV.ContactType }> &\n  WithAdditionalClassNameProps &\n  PropsOf<'svg'>): ReactElement {\n  switch (type) {\n    case CV.ContactType.Email:\n      return <InlineSVG source={mailIcon} {...props} />;\n    case CV.ContactType.Phone:\n      return <InlineSVG source={phoneIcon} {...props} />;\n    case CV.ContactType.Location:\n      return <InlineSVG source={locationIcon} {...props} />;\n    case CV.ContactType.Site:\n      return <InlineSVG source={browseIcon} {...props} />;\n    default:\n      return assertNever(type);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var educationList = \"_2916f\";\nexport var educationListItem = \"_59fab\";\nexport var experienceList = \"aa7cc\";\nexport var experienceListItem = \"_7b961\";\nexport var mainBlock = \"_4c7f5\";\nexport var paragraph = \"c5cac\";\nexport var title = \"_57017\";","import { ReactElement, ReactSVG } from 'react';\n\nexport type SVGDefsProps = Readonly<\n  {\n    children:\n      | ReactElement<unknown, keyof ReactSVG>\n      | readonly ReactElement<unknown, keyof ReactSVG>[];\n  } & ({ singleton: true; id: string } | { singleton?: undefined })\n>;\n\n/* eslint-disable react/destructuring-assignment */\nexport function SVGDefs(props: SVGDefsProps): ReactElement | null {\n  // TODO: svg-singleton\n  return <defs>{props.children}</defs>;\n}\n/* eslint-enable */\n","// extracted by mini-css-extract-plugin\nexport var icon = \"_025ce\";\nexport var svg = \"_627d2\";","import { ReactElement } from 'react';\nimport { SVGDefs } from 'components/svg-defs';\nimport {\n  GatsbyAssetImage,\n  GatsbyAssetImageProps,\n} from 'components/gatsby-asset-image';\nimport classNames from 'classnames';\nimport * as styles from './company-icon.module.scss';\n\nexport function CompanyIcon({\n  className,\n  ...restProps\n}: GatsbyAssetImageProps): ReactElement {\n  return (\n    <>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 48 48\"\n        className={styles.svg}\n      >\n        <SVGDefs singleton id=\"IconShape\">\n          <clipPath id=\"icon-shape\" clipPathUnits=\"objectBoundingBox\">\n            <path\n              d=\"M0.254,0.996 C0.194,0.994,0.162,0.984,0.14,0.975 C0.112,0.964,0.092,0.951,0.07,0.93 C0.049,0.909,0.036,0.888,0.025,0.86 C0.016,0.838,0.006,0.806,0.004,0.746 C0.001,0.682,0,0.663,0,0.5 C0,0.337,0.001,0.318,0.004,0.254 C0.006,0.194,0.016,0.162,0.025,0.14 C0.036,0.112,0.049,0.092,0.07,0.07 C0.091,0.049,0.112,0.036,0.14,0.025 C0.162,0.016,0.194,0.006,0.254,0.004 C0.318,0.001,0.337,0,0.5,0 C0.663,0,0.682,0.001,0.746,0.004 C0.806,0.006,0.838,0.016,0.86,0.025 C0.888,0.036,0.908,0.049,0.93,0.07 C0.951,0.091,0.964,0.112,0.975,0.14 C0.984,0.162,0.994,0.194,0.996,0.254 C0.999,0.318,1,0.337,1,0.5 C1,0.663,0.999,0.682,0.996,0.746 C0.994,0.806,0.984,0.838,0.975,0.86 C0.964,0.888,0.951,0.909,0.93,0.93 C0.909,0.951,0.888,0.964,0.86,0.975 C0.838,0.984,0.806,0.994,0.746,0.996 C0.682,0.999,0.663,1,0.5,1 C0.337,1,0.318,0.999,0.254,0.996\"\n              fill=\"#fff\"\n            />\n          </clipPath>\n        </SVGDefs>\n      </svg>\n      <GatsbyAssetImage\n        {...restProps}\n        // eslint-disable-next-line react/destructuring-assignment\n        className={classNames(styles.icon, className)}\n      />\n    </>\n  );\n}\n","import { getDateMonth, isSomething, optionalMap } from 'utils';\n\nexport function formatDates(\n  dateStarted: Date,\n  dateEnded: Date | string | undefined,\n): string {\n  return [\n    formatDate(dateStarted),\n    optionalMap(dateEnded, (endedAt) =>\n      endedAt instanceof Date ? formatDate(endedAt) : endedAt,\n    ),\n  ]\n    .filter(isSomething)\n    .join(' - ');\n}\n\nexport function formatDate(date: Date): string {\n  return `${getDateMonth(date).substring(0, 3)} ${date.getFullYear()}`;\n}\n\nexport function formatDuration(\n  dateA: Date,\n  dateB = new Date(Date.now()),\n): string {\n  const difference = Math.abs(dateA.getTime() - dateB.getTime());\n  const mothsDifference = Math.floor(difference / 1000 / 60 / 60 / 24 / 30);\n\n  const years = Math.floor(mothsDifference / 12);\n  const months = (mothsDifference % 12) + 1;\n\n  return [\n    years > 0 ? `${years} yr${years > 1 ? 's' : ''}` : undefined,\n    `${months} ${months > 1 ? 'mos' : 'mon'}`,\n  ]\n    .filter(isSomething)\n    .join(' ');\n}\n","import { ReactElement, useMemo } from 'react';\nimport { Typography } from 'components/typography';\nimport { isSomething } from 'utils';\nimport { InlineSVG } from 'components/inline-svg';\nimport attachmentIcon from 'assets/icons/attachment.inline.svg';\nimport { CV } from 'components/cv';\nimport { CompanyIcon } from './company-icon.component';\nimport { formatDates } from './dates';\nimport * as styles from './education.module.scss';\n\nexport function Education({\n  companyLogo,\n  companyURL,\n  courseName,\n  dateStarted,\n  dateEnded,\n  description,\n  certificateURL,\n}: CV.InnerContentDataType<CV.Education>): ReactElement {\n  const fromDate = useMemo(() => new Date(dateStarted), [dateStarted]);\n  const toDate = useMemo(\n    () => (dateEnded ? new Date(dateEnded) : undefined),\n    [dateEnded],\n  );\n\n  return (\n    <div className={styles.education}>\n      <div className={styles.educationContent}>\n        <CompanyIcon\n          alt={`${courseName} logo`}\n          className={styles.educationCompanyLogo}\n          source={companyLogo}\n        />\n        <div className={styles.educationInfo}>\n          <Typography\n            as=\"h4\"\n            variant={Typography.Variant.ParagraphMD}\n            fontWeight={Typography.Weight.Medium}\n            fontColor={Typography.Color.Black}\n            nowrap\n            {...resolveCompanyProps(companyURL)}\n          >\n            {courseName}\n          </Typography>\n          {isSomething(description) && (\n            <Typography\n              as=\"h5\"\n              variant={Typography.Variant.CaptionSM}\n              fontColor={Typography.Color.DarkGray}\n              nowrap\n            >\n              {description}\n            </Typography>\n          )}\n          <Typography\n            variant={Typography.Variant.CaptionSM}\n            fontColor={Typography.Color.Gray}\n            nowrap\n          >\n            {formatDates(fromDate, toDate)}\n          </Typography>\n          {isSomething(certificateURL) && (\n            <Typography\n              as=\"a\"\n              href={certificateURL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              variant={Typography.Variant.CaptionSM}\n              className={styles.educationCertificate}\n              nowrap\n            >\n              <span className={styles.educationCertificateIconContainer}>\n                <InlineSVG\n                  source={attachmentIcon}\n                  role=\"img\"\n                  className={styles.educationCertificateIcon}\n                />\n              </span>\n              <span>Course certificate</span>\n            </Typography>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction resolveCompanyProps(\n  companyURL: string | undefined,\n): Typography.Props<'a'> {\n  return isSomething(companyURL)\n    ? {\n        as: 'a',\n        href: companyURL,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      }\n    : {};\n}\n","// extracted by mini-css-extract-plugin\nexport var education = \"b8bf6\";\nexport var educationCertificate = \"_52e4f\";\nexport var educationCertificateIcon = \"bc329\";\nexport var educationCertificateIconContainer = \"_3e94b\";\nexport var educationCompanyLogo = \"b3cd3\";\nexport var educationContent = \"_9e24e\";\nexport var educationInfo = \"_84f46\";\nexport var themeChangingDuration = \"200\";","// extracted by mini-css-extract-plugin\nexport var experience = \"_4dcce\";\nexport var experienceCompanyInfo = \"_5f318\";\nexport var experienceCompanyLogo = \"_0a285\";\nexport var experienceCompanyName = \"a5f68\";\nexport var experienceContent = \"_42055\";\nexport var experienceDates = \"f0c41\";\nexport var experienceHeader = \"c53af\";\nexport var experienceLocation = \"c1dbe\";\nexport var experienceMetric = \"_5718c\";\nexport var experienceMetricIcon = \"_5366a\";\nexport var experienceMetrics = \"edaca\";\nexport var experienceParagraph = \"a01c1\";\nexport var themeChangingDuration = \"200\";","import { ReactElement, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Typography } from 'components/typography';\nimport { InlineSVG } from 'components/inline-svg';\nimport locationIcon from 'assets/icons/location.inline.svg';\nimport { isSomething } from 'utils';\nimport { CV } from 'components/cv';\nimport { CompanyIcon } from './company-icon.component';\nimport { formatDates, formatDuration } from './dates';\nimport * as styles from './experience.module.scss';\n\nexport function Experience({\n  companyName,\n  companyLogo,\n  companyURL,\n  position,\n  description,\n  dateStarted,\n  dateEnded,\n  location,\n}: CV.InnerContentDataType<CV.Experience>): ReactElement {\n  const fromDate = useMemo(() => new Date(dateStarted), [dateStarted]);\n  const toDate = useMemo(\n    () => (dateEnded ? new Date(dateEnded) : undefined),\n    [dateEnded],\n  );\n\n  return (\n    <div className={styles.experience}>\n      <div className={styles.experienceContent}>\n        <div className={styles.experienceHeader}>\n          <CompanyIcon\n            alt={`${companyName} logo`}\n            className={styles.experienceCompanyLogo}\n            source={companyLogo}\n          />\n          <div className={styles.experienceCompanyInfo}>\n            <div>\n              <Typography\n                as=\"h4\"\n                variant={Typography.Variant.ParagraphMD}\n                fontWeight={Typography.Weight.Medium}\n                fontColor={Typography.Color.Black}\n                className={styles.experienceCompanyName}\n                nowrap\n                {...resolveCompanyProps(companyURL)}\n              >\n                {companyName}\n              </Typography>\n              <Typography\n                as=\"h5\"\n                variant={Typography.Variant.CaptionMD}\n                fontColor={Typography.Color.DarkGray}\n                nowrap\n              >\n                {position}\n              </Typography>\n            </div>\n            <div className={styles.experienceMetrics}>\n              <Typography\n                as=\"h6\"\n                variant={Typography.Variant.CaptionSM}\n                fontColor={Typography.Color.LightGray}\n                className={classNames(\n                  styles.experienceMetric,\n                  styles.experienceDates,\n                )}\n                nowrap\n              >\n                {formatDates(fromDate, toDate ?? 'Present')}\n                {' · '}\n                {formatDuration(fromDate, toDate)}\n              </Typography>\n              <Typography\n                as=\"h6\"\n                variant={Typography.Variant.CaptionSM}\n                fontColor={Typography.Color.LightGray}\n                className={classNames(\n                  styles.experienceMetric,\n                  styles.experienceLocation,\n                )}\n                nowrap\n              >\n                <InlineSVG\n                  source={locationIcon}\n                  role=\"img\"\n                  className={styles.experienceMetricIcon}\n                />\n                {location}\n              </Typography>\n            </div>\n          </div>\n        </div>\n        <div>\n          {description.map(({ variant, color, weight, text }, index) => (\n            <Typography\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              variant={variant ?? Typography.Variant.ParagraphSM}\n              fontColor={color}\n              fontWeight={weight}\n              className={styles.experienceParagraph}\n            >\n              {text}\n            </Typography>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction resolveCompanyProps(\n  companyURL: string | undefined,\n): Typography.Props<'a'> {\n  return isSomething(companyURL)\n    ? {\n        as: 'a',\n        href: companyURL,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      }\n    : {};\n}\n","import { PropsWithChildren, ReactElement, ReactNode } from 'react';\nimport { Typography } from 'components/typography';\nimport { assertNever } from 'utils';\nimport { CV } from 'components/cv';\nimport * as styles from './main-block.module.scss';\nimport { Education } from './education.component';\nimport { Experience } from './experience.component';\n\ntype MainBlockProps = PropsWithChildren<Readonly<{ content: CV.Content }>>;\n\nexport function MainBlock({ content }: MainBlockProps): ReactElement {\n  const renderContent = (): ReactNode => {\n    const { type } = content;\n\n    switch (type) {\n      case CV.ContentType.Text:\n        return content.data.map(({ variant, color, weight, text }, index) => (\n          <Typography\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            variant={variant ?? Typography.Variant.ParagraphMD}\n            fontColor={color}\n            fontWeight={weight}\n            className={styles.paragraph}\n          >\n            {text}\n          </Typography>\n        ));\n      case CV.ContentType.Education:\n        return (\n          <ul className={styles.educationList}>\n            {content.data.map((education, index) => (\n              <li\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                className={styles.educationListItem}\n              >\n                <Education\n                  companyLogo={education.companyLogo}\n                  companyURL={education.companyURL}\n                  courseName={education.courseName}\n                  dateStarted={education.dateStarted}\n                  dateEnded={education.dateEnded}\n                  description={education.description}\n                  certificateURL={education.certificateURL}\n                />\n              </li>\n            ))}\n          </ul>\n        );\n      case CV.ContentType.Experience:\n        return (\n          <ul className={styles.experienceList}>\n            {content.data.map((experience, index) => (\n              <li\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                className={styles.experienceListItem}\n              >\n                <Experience\n                  companyName={experience.companyName}\n                  companyLogo={experience.companyLogo}\n                  companyURL={experience.companyURL}\n                  dateStarted={experience.dateStarted}\n                  dateEnded={experience.dateEnded}\n                  description={experience.description}\n                  location={experience.location}\n                  position={experience.position}\n                />\n              </li>\n            ))}\n          </ul>\n        );\n      default:\n        return assertNever(type);\n    }\n  };\n\n  return (\n    <section className={styles.mainBlock}>\n      <Typography\n        as=\"h3\"\n        variant={Typography.Variant.Title}\n        fontColor={Typography.Color.Black}\n        fontWeight={Typography.Weight.Medium}\n        className={styles.title}\n      >\n        {content.title}\n      </Typography>\n      {renderContent()}\n    </section>\n  );\n}\n","import { ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { OutboundLink } from 'gatsby-plugin-google-gtag';\nimport { WithOptionalClassNameProps } from 'types';\nimport { useSitePathPrefix } from 'hooks';\nimport { InlineSVG } from 'components/inline-svg';\nimport downloadIcon from 'assets/icons/download.inline.svg';\nimport * as styles from './download-button.module.scss';\n\nexport type DownloadButtonProps = Readonly<{\n  url: string;\n}> &\n  WithOptionalClassNameProps;\n\nexport function DownloadButton({\n  url,\n  className,\n}: DownloadButtonProps): ReactElement {\n  const pathPrefix = useSitePathPrefix();\n\n  return (\n    <OutboundLink\n      href={pathPrefix + url}\n      target=\"_blank\"\n      className={classNames(styles.downloadButton, className)}\n    >\n      Download CV\n      <InlineSVG source={downloadIcon} className={styles.downloadButtonIcon} />\n    </OutboundLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var downloadButton = \"c5212\";\nexport var downloadButtonIcon = \"c30b7\";\nexport var themeChangingDuration = \"200\";","import { ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { ThemeToggler } from 'components/theme';\nimport { RootClassName } from 'components/root-classname';\nimport { useCV } from 'components/cv';\nimport { ScrollDirection, useScrollDirection } from 'hooks';\nimport { AsideComponent } from './aside';\nimport { MainBlock } from './main-block';\nimport { DownloadButton } from './download-button.component';\nimport * as styles from './cv.module.scss';\n\nexport function CVDocument(): ReactElement {\n  const { body } = useCV();\n\n  return (\n    <RootClassName className={styles.root}>\n      <div className={styles.wrapper}>\n        <main className={styles.content}>\n          <AsideComponent asideClassName={styles.aside} />\n          <div className={styles.main}>\n            {body.map((content, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <MainBlock key={index} content={content} />\n            ))}\n          </div>\n        </main>\n        <Controls />\n      </div>\n    </RootClassName>\n  );\n}\n\nfunction Controls(): ReactElement {\n  const { pdfURL } = useCV();\n  const scrollDirection = useScrollDirection({ threshold: 50 });\n\n  return (\n    <aside\n      className={classNames(\n        styles.controls,\n        scrollDirection === ScrollDirection.Down &&\n          styles.controlsScrollingDown,\n      )}\n    >\n      <DownloadButton url={pdfURL} />\n      <ThemeToggler className={styles.themeToggler} />\n    </aside>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var aside = \"_465b4\";\nexport var content = \"_8ea66\";\nexport var controls = \"_75c10\";\nexport var controlsScrollingDown = \"cdcfd\";\nexport var main = \"a71a9\";\nexport var root = \"b7ebd\";\nexport var themeChangingDuration = \"200\";\nexport var themeToggler = \"_4a948\";\nexport var wrapper = \"_5b0ba\";","import { ReactElement } from 'react';\nimport { PageProps } from 'gatsby';\nimport { Page } from 'components/page';\nimport { CVProvider, CV } from 'components/cv';\nimport { CVDocument } from './cv.component';\n\nexport default function CVPage({\n  pageContext,\n}: PageProps<unknown, { cv: CV }>): ReactElement {\n  return (\n    <Page title={`${pageContext.cv.profile.name} CV`}>\n      <CVProvider cv={pageContext.cv}>\n        <CVDocument />\n      </CVProvider>\n    </Page>\n  );\n}\n"],"names":["publicPath","module","exports","url","view","viewBox","title","toString","JSON","stringify","this","_interopRequireDefault","require","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_excluded","OutboundLink","default","forwardRef","_ref","ref","children","props","createElement","onClick","e","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","target","toLowerCase","window","gtag","event_category","event_label","href","transport_type","event_callback","document","location","propTypes","string","func","Page","_jsxs","_jsx","Helmet","defaultTitle","titleTemplate","lang","CVContext","createContext","undefined","CVProvider","cv","Provider","value","ContactType","ContentType","useCV","createUseContext","CV","type","Email","Phone","Location","Site","assertNever","GatsbyImageAsset","asset","extension","GatsbyAssetImage","source","alt","restProps","isSVG","svg","dangerouslySetInnerHTML","__html","content","className","classNames","childSvgSprites","InlineSVG","src","publicURL","GatsbyImage","image","unwrap","getImage","childImageSharp","gatsbyImageData","AsideBlock","isSomething","Typography","as","variant","fontColor","AsideList","Children","child","index","ComponentToRender","icon","contactLink","contactLinkHoverable","AsideComponent","asideClassName","profile","contacts","socials","languages","avatar","name","fontWeight","position","map","contact","resolveContactRenderData","itemProps","ItemWithIcon","ContactIcon","role","styles","toLabel","profileURL","username","rel","level","countryCode","replace","URL","host","mailIcon","phoneIcon","locationIcon","browseIcon","SVGDefs","CompanyIcon","xmlns","singleton","id","clipPathUnits","d","fill","formatDates","dateStarted","dateEnded","formatDate","optionalMap","endedAt","Date","filter","join","date","getDateMonth","substring","getFullYear","formatDuration","dateA","dateB","now","difference","Math","abs","getTime","mothsDifference","floor","years","months","Education","companyLogo","companyURL","courseName","description","certificateURL","fromDate","useMemo","toDate","nowrap","resolveCompanyProps","attachmentIcon","experienceMetric","Experience","companyName","color","weight","text","MainBlock","Text","data","education","experience","renderContent","DownloadButton","pathPrefix","useSitePathPrefix","downloadIcon","CVDocument","body","RootClassName","Controls","pdfURL","scrollDirection","useScrollDirection","threshold","ScrollDirection","ThemeToggler","CVPage","pageContext"],"sourceRoot":""}
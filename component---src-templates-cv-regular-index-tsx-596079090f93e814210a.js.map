{"version":3,"file":"component---src-templates-cv-regular-index-tsx-596079090f93e814210a.js","mappings":"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","sources":["webpack://godested-site/./node_modules/gatsby-plugin-google-gtag/index.js","webpack://godested-site/./src/components/page/page.component.tsx","webpack://godested-site/./src/components/typography/typography.component.tsx","webpack://godested-site/./src/components/cv/cv.provider.tsx","webpack://godested-site/./src/components/cv/types.ts","webpack://godested-site/./src/components/gatsby-asset-image/types.ts","webpack://godested-site/./src/components/gatsby-asset-image/gatsby-asset-image.module.scss","webpack://godested-site/./src/components/gatsby-asset-image/gastby-asset-image.component.tsx","webpack://godested-site/./src/templates/cv-regular/aside/block.component.tsx","webpack://godested-site/./src/templates/cv-regular/aside/block.module.scss","webpack://godested-site/./src/templates/cv-regular/aside/list.module.scss","webpack://godested-site/./src/templates/cv-regular/aside/list.component.tsx","webpack://godested-site/./src/templates/cv-regular/aside/aside.module.scss","webpack://godested-site/./src/templates/cv-regular/aside/aside.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/main-block.module.scss","webpack://godested-site/./src/components/svg-defs/svg-defs.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/company-icon.module.scss","webpack://godested-site/./src/templates/cv-regular/main-block/company-icon.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/dates.ts","webpack://godested-site/./src/templates/cv-regular/main-block/education.module.scss","webpack://godested-site/./src/templates/cv-regular/main-block/education.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/experience.module.scss","webpack://godested-site/./src/templates/cv-regular/main-block/experience.component.tsx","webpack://godested-site/./src/templates/cv-regular/main-block/main-block.component.tsx","webpack://godested-site/./src/templates/cv-regular/download-button.component.tsx","webpack://godested-site/./src/templates/cv-regular/download-button.module.scss","webpack://godested-site/./src/templates/cv-regular/cv.module.scss","webpack://godested-site/./src/templates/cv-regular/cv.component.tsx","webpack://godested-site/./src/templates/cv-regular/index.tsx","webpack://godested-site/./src/components/typography/typography.module.scss","webpack://godested-site/./src/assets/icons/attachment.inline.svg","webpack://godested-site/./src/assets/icons/browse.inline.svg","webpack://godested-site/./src/assets/icons/download.inline.svg","webpack://godested-site/./src/assets/icons/location.inline.svg","webpack://godested-site/./src/assets/icons/mail.inline.svg","webpack://godested-site/./src/assets/icons/phone.inline.svg","webpack://godested-site/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OutboundLink = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _excluded = [\"children\"];\n\nvar OutboundLink = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  return /*#__PURE__*/_react.default.createElement(\"a\", (0, _extends2.default)({\n    ref: ref\n  }, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === \"function\") {\n        props.onClick(e);\n      }\n\n      var redirect = true;\n\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n\n      if (props.target && props.target.toLowerCase() !== \"_self\") {\n        redirect = false;\n      }\n\n      if (window.gtag) {\n        window.gtag(\"event\", \"click\", {\n          event_category: \"outbound\",\n          event_label: props.href,\n          transport_type: redirect ? \"beacon\" : \"\",\n          event_callback: function event_callback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }), children);\n});\n\nexports.OutboundLink = OutboundLink;\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};","import { PropsWithChildren, ReactElement } from 'react';\nimport { Helmet } from 'react-helmet';\n\nexport type PageProps = Readonly<\n  PropsWithChildren<{\n    title?: string;\n  }>\n>;\n\nexport function Page({ title, children }: PageProps): ReactElement {\n  return (\n    <>\n      <Helmet\n        title={title}\n        defaultTitle=\"@godested\"\n        titleTemplate=\"%s · @godested\"\n      >\n        <html lang=\"en\" />\n      </Helmet>\n      {children}\n    </>\n  );\n}\n","import { ReactElement, Ref, ReactNode, ElementType, ReactHTML } from 'react';\nimport classNames from 'classnames';\nimport { CSSClassName } from 'styles';\nimport { assertNever, optionalMap } from 'utils';\nimport { WithOptionalClassNameProps, PolymorphicComponentProps } from 'types';\nimport * as styles from './typography.module.scss';\n\nexport function Typography<T extends ElementType>(\n  props: Typography.Props<T>,\n): ReactElement {\n  const {\n    variant = Typography.Variant.ParagraphMD,\n    as: ComponentToRender = resolveDefaultTagNameFromVariant(variant),\n    fontWeight,\n    fontColor,\n    inline,\n    italic,\n    children,\n    nowrap,\n    className,\n    innerRef,\n    ...restProps\n  } = props;\n\n  return (\n    <ComponentToRender\n      ref={innerRef}\n      className={classNames(\n        className,\n        styles.typography,\n        inline && styles.typographyInline,\n        italic && styles.typographyItalic,\n        nowrap && styles.typographyNoWrap,\n        'href' in restProps && styles.typographyLinked,\n        optionalMap(fontColor, resolveClassNameFromColor),\n        optionalMap(fontWeight, resolveClassNameFromWeight),\n        resolveClassNameFromVariant(variant),\n      )}\n      {...restProps}\n    >\n      {children}\n    </ComponentToRender>\n  );\n}\n\nexport namespace Typography {\n  export type Props<T extends ElementType = ElementType> =\n    PolymorphicComponentProps<\n      T,\n      Readonly<\n        WithOptionalClassNameProps &\n          Partial<{\n            variant: Variant;\n            fontColor: Color;\n            fontWeight: Weight;\n            inline: true;\n            italic: true;\n            nowrap: true;\n            children: ReactNode | undefined;\n            innerRef: Ref<T>;\n          }>\n      >\n    >;\n\n  export enum Variant {\n    Heading,\n    Title,\n    CaptionSM,\n    CaptionMD,\n    ParagraphMD,\n    ParagraphSM,\n  }\n\n  export enum Weight {\n    ExtraLight,\n    Light,\n    Thin,\n    Regular,\n    Medium,\n    DemiBold,\n    Bold,\n    ExtraBold,\n    Black,\n  }\n\n  export enum Color {\n    Black,\n    DarkGray,\n    Gray,\n    LightGray,\n    Accent,\n    White,\n  }\n}\n\nfunction resolveClassNameFromVariant(\n  variant: Typography.Variant,\n): CSSClassName {\n  switch (variant) {\n    case Typography.Variant.Heading:\n      return styles.typographyHeading;\n    case Typography.Variant.Title:\n      return styles.typographyTitle;\n    case Typography.Variant.CaptionSM:\n      return styles.typographyCaptionSm;\n    case Typography.Variant.CaptionMD:\n      return styles.typographyCaptionMd;\n    case Typography.Variant.ParagraphSM:\n      return styles.typographyParagraphSm;\n    case Typography.Variant.ParagraphMD:\n      return styles.typographyParagraphMd;\n    default:\n      return assertNever(variant);\n  }\n}\n\nfunction resolveClassNameFromWeight(weight: Typography.Weight): CSSClassName {\n  switch (weight) {\n    case Typography.Weight.ExtraLight:\n      return styles.typographyExtraLight;\n    case Typography.Weight.Light:\n      return styles.typographyLight;\n    case Typography.Weight.Thin:\n      return styles.typographyThin;\n    case Typography.Weight.Regular:\n      return styles.typographyRegular;\n    case Typography.Weight.Medium:\n      return styles.typographyMedium;\n    case Typography.Weight.DemiBold:\n      return styles.typographyDemiBold;\n    case Typography.Weight.Bold:\n      return styles.typographyBold;\n    case Typography.Weight.ExtraBold:\n      return styles.typographyExtraBold;\n    case Typography.Weight.Black:\n      return styles.typographyBlack;\n    default:\n      return assertNever(weight);\n  }\n}\n\nfunction resolveClassNameFromColor(color: Typography.Color): CSSClassName {\n  switch (color) {\n    case Typography.Color.Black:\n      return styles.typographyBlackColor;\n    case Typography.Color.DarkGray:\n      return styles.typographyDarkGrayColor;\n    case Typography.Color.Gray:\n      return styles.typographyGrayColor;\n    case Typography.Color.LightGray:\n      return styles.typographyLightGrayColor;\n    case Typography.Color.Accent:\n      return styles.typographyAccentColor;\n    case Typography.Color.White:\n      return styles.typographyWhiteColor;\n    default:\n      return assertNever(color);\n  }\n}\n\nfunction resolveDefaultTagNameFromVariant(\n  variant: Typography.Variant,\n): keyof ReactHTML {\n  switch (variant) {\n    case Typography.Variant.Heading:\n      return 'h2';\n    case Typography.Variant.Title:\n      return 'h3';\n    case Typography.Variant.CaptionSM:\n    case Typography.Variant.CaptionMD:\n      return 'h4';\n    case Typography.Variant.ParagraphMD:\n    case Typography.Variant.ParagraphSM:\n      return 'p';\n    default:\n      return assertNever(variant);\n  }\n}\n","import { createContext, PropsWithChildren, ReactElement } from 'react';\nimport { createUseContext } from 'utils';\nimport { CV } from './types';\n\nexport const CVContext = createContext<CV | undefined>(undefined);\n\ntype CVProviderProps = Readonly<PropsWithChildren<{ cv: CV }>>;\n\nexport function CVProvider({ children, cv }: CVProviderProps): ReactElement {\n  return <CVContext.Provider value={cv}>{children}</CVContext.Provider>;\n}\n\nexport const useCV = createUseContext(CVContext);\n","import { Typography } from 'components/typography';\nimport { GatsbyImageAsset } from 'components/gatsby-asset-image';\nimport { assertNever } from 'utils';\n\nexport type CV = Readonly<{\n  profile: CV.Profile;\n  contacts: readonly CV.Contact[];\n  socials: readonly CV.Social[];\n  languages: readonly CV.Language[];\n  body: readonly CV.Content[];\n  pdfURL: string;\n}>;\n\nexport namespace CV {\n  export type Profile = Readonly<{\n    name: string;\n    position: string;\n    avatar: GatsbyImageAsset;\n  }>;\n\n  export enum ContactType {\n    Email = 'email',\n    Phone = 'phone',\n    Location = 'location',\n    Site = 'site',\n  }\n\n  export namespace ContactType {\n    export function toLabel(type: ContactType): string {\n      switch (type) {\n        case ContactType.Email:\n          return 'Email';\n        case ContactType.Phone:\n          return 'Phone';\n        case ContactType.Location:\n          return 'Location';\n        case ContactType.Site:\n          return 'Website';\n        default:\n          return assertNever(type);\n      }\n    }\n  }\n\n  export type Contact = Readonly<{\n    type: ContactType;\n    value: string;\n  }>;\n\n  export type Social = Readonly<{\n    icon: GatsbyImageAsset;\n    profileURL: string;\n    username: string;\n    name: string;\n  }>;\n\n  export type Language = Readonly<{\n    icon: GatsbyImageAsset;\n    countryCode: string;\n    name: string;\n    level: string;\n  }>;\n\n  export type Content = Text | Experience | Education;\n\n  export enum ContentType {\n    Text = 'text',\n    Experience = 'experience',\n    Education = 'education',\n  }\n\n  type CommonContent<T extends ContentType, D> = Readonly<{\n    type: T;\n    title: string;\n    data: readonly D[];\n  }>;\n\n  export type InnerContentDataType<\n    T extends CommonContent<ContentType, unknown>,\n  > = T extends CommonContent<ContentType, infer D> ? D : never;\n\n  export type Text = CommonContent<ContentType.Text, Paragraph>;\n\n  export type Experience = CommonContent<\n    ContentType.Experience,\n    {\n      companyName: string;\n      companyLogo: GatsbyImageAsset;\n      position: string;\n      description: readonly Paragraph[];\n      dateStarted: number | string;\n      dateEnded?: number | string;\n      location: string;\n      companyURL?: string;\n    }\n  >;\n\n  export type Education = CommonContent<\n    ContentType.Education,\n    {\n      courseName: string;\n      companyLogo: GatsbyImageAsset;\n      dateStarted: number | string;\n      dateEnded?: number | string;\n      companyURL?: string;\n      description?: string;\n      certificateURL?: string;\n    }\n  >;\n\n  export type Paragraph = Readonly<{\n    text: string;\n    variant?: Typography.Variant;\n    color?: Typography.Color;\n    weight?: Typography.Weight;\n  }>;\n}\n","import { ImageDataLike } from 'gatsby-plugin-image';\n\nexport type GatsbyImageAsset = GatsbyImageAsset.SVG | GatsbyImageAsset.Image;\n\nexport namespace GatsbyImageAsset {\n  export type SVG = Readonly<{\n    extension: 'svg';\n    publicURL: string;\n    svg?: { content: string };\n  }>;\n\n  export type Image = Readonly<{\n    extension: string;\n    childImageSharp: { gatsbyImageData: ImageDataLike };\n  }>;\n\n  export function isSVG(asset: GatsbyImageAsset): asset is SVG {\n    return asset.extension === 'svg';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var svgContainer = \"_1fb5d\";","import classNames from 'classnames';\nimport { GatsbyImage, GatsbyImageProps, getImage } from 'gatsby-plugin-image';\nimport { unwrap } from 'utils';\nimport { GatsbyImageAsset } from './types';\nimport * as styles from './gatsby-asset-image.module.scss';\n\nexport type GatsbyAssetImageProps = Readonly<{\n  source: GatsbyImageAsset;\n  alt: string;\n}> &\n  Omit<GatsbyImageProps, 'image'>;\n\nexport function GatsbyAssetImage({\n  source,\n  alt,\n  ...restProps\n}: GatsbyAssetImageProps) {\n  if (GatsbyImageAsset.isSVG(source)) {\n    return source.svg ? (\n      <div\n        dangerouslySetInnerHTML={{ __html: source.svg.content }}\n        {...restProps}\n        className={classNames(styles.svgContainer, restProps.className)}\n      />\n    ) : (\n      <img src={source.publicURL} alt={alt} {...restProps} />\n    );\n  }\n\n  return (\n    <GatsbyImage\n      image={unwrap(\n        getImage(source.childImageSharp.gatsbyImageData),\n        `Couldn't get image ${alt}`,\n      )}\n      alt={alt}\n      {...restProps}\n    />\n  );\n}\n","import { PropsWithChildren, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { WithOptionalClassNameProps } from 'types';\nimport { isSomething } from 'utils';\nimport { Typography } from 'components/typography';\nimport * as styles from './block.module.scss';\n\ntype AsideBlockProps = Readonly<\n  { title?: string } & PropsWithChildren<WithOptionalClassNameProps>\n>;\n\nexport function AsideBlock({\n  children,\n  className,\n  title,\n}: AsideBlockProps): ReactElement {\n  return (\n    <section className={classNames(styles.block, className)}>\n      {isSomething(title) && (\n        <Typography\n          variant={Typography.Variant.CaptionSM}\n          fontColor={Typography.Color.DarkGray}\n          className={styles.title}\n        >\n          {title}\n        </Typography>\n      )}\n      {children}\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var block = \"_3890f\";\nexport var title = \"_5e45a\";","// extracted by mini-css-extract-plugin\nexport var asideList = \"a6f5c\";\nexport var asideListItem = \"d6af2\";\nexport var itemWithIcon = \"a4ff7\";\nexport var itemWithIconContent = \"_7ac5e\";\nexport var itemWithIconIcon = \"c10ce\";","import {\n  Children,\n  ElementType,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n} from 'react';\nimport classNames from 'classnames';\nimport { PolymorphicComponentProps, WithOptionalClassNameProps } from 'types';\nimport * as styles from './list.module.scss';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function AsideList({ children }: PropsWithChildren<{}>): ReactElement {\n  return (\n    <ul className={styles.asideList}>\n      {Children.map(children, (child, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <li key={index} className={styles.asideListItem}>\n          {child}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport namespace AsideList {\n  export function ItemWithIcon<T extends ElementType>(\n    props: PolymorphicComponentProps<\n      T,\n      PropsWithChildren<{\n        icon: ReactNode;\n      }>\n    > &\n      WithOptionalClassNameProps,\n  ): ReactElement {\n    const {\n      as: ComponentToRender = 'div',\n      children,\n      className,\n      icon,\n      ...restProps\n    } = props;\n\n    return (\n      <ComponentToRender\n        className={classNames(styles.itemWithIcon, className)}\n        {...restProps}\n      >\n        <div className={styles.itemWithIconIcon}>{icon}</div>\n        <div className={styles.itemWithIconContent}>{children}</div>\n      </ComponentToRender>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var aside = \"ad15f\";\nexport var asideContent = \"_9716a\";\nexport var contactLink = \"_568f0\";\nexport var contactLinkHoverable = \"bff24\";\nexport var flagIcon = \"_2efc3\";\nexport var iconContainer = \"_76c13\";\nexport var iconContainerIcon = \"_74a8c\";\nexport var position = \"_32432\";\nexport var profileAvatar = \"_5e1ec\";\nexport var socialIcon = \"_4945e\";\nexport var themeChangingDuration = \"200\";\nexport var typography = \"d0c17\";\nexport var typographyAccentColor = \"_58f59\";\nexport var typographyBlack = \"_2e18e\";\nexport var typographyBlackColor = \"_33703\";\nexport var typographyBold = \"cd09f\";\nexport var typographyCaptionMd = \"_4baea\";\nexport var typographyCaptionSm = \"_38c0e\";\nexport var typographyDarkGrayColor = \"_352b8\";\nexport var typographyDemiBold = \"f16ac\";\nexport var typographyExtraBold = \"_6f8d3\";\nexport var typographyExtraLight = \"ab93a\";\nexport var typographyGrayColor = \"_70124\";\nexport var typographyHeading = \"_00c38\";\nexport var typographyInline = \"d2022\";\nexport var typographyItalic = \"bb259\";\nexport var typographyLight = \"b17da\";\nexport var typographyLightGrayColor = \"_57b5f\";\nexport var typographyLinked = \"dd00f\";\nexport var typographyMedium = \"_8a65b\";\nexport var typographyNoWrap = \"_47329\";\nexport var typographyParagraphMd = \"a0921\";\nexport var typographyParagraphSm = \"e9a20\";\nexport var typographyRegular = \"b26c1\";\nexport var typographyThin = \"_64a05\";\nexport var typographyTitle = \"_280e4\";\nexport var typographyWhiteColor = \"_4f8af\";","import { ElementType, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { PropsOf, WithAdditionalClassNameProps } from 'types';\nimport { Typography } from 'components/typography';\nimport { GatsbyAssetImage } from 'components/gatsby-asset-image';\nimport { assertNever } from 'utils';\nimport LocationIcon from 'assets/icons/location.inline.svg';\nimport MailIcon from 'assets/icons/mail.inline.svg';\nimport PhoneIcon from 'assets/icons/phone.inline.svg';\nimport BrowseIcon from 'assets/icons/browse.inline.svg';\nimport { CV, useCV } from 'components/cv';\nimport { AsideBlock } from './block.component';\nimport { AsideList } from './list.component';\nimport * as styles from './aside.module.scss';\n\nexport function AsideComponent({\n  asideClassName,\n}: WithAdditionalClassNameProps<['asideClassName']>): ReactElement {\n  const { profile, contacts, socials, languages } = useCV();\n\n  return (\n    <aside className={classNames(styles.aside, asideClassName)}>\n      <div className={styles.asideContent}>\n        <AsideBlock>\n          <GatsbyAssetImage\n            source={profile.avatar}\n            alt={profile.name}\n            className={styles.profileAvatar}\n          />\n          <Typography\n            as=\"h1\"\n            variant={Typography.Variant.Heading}\n            fontWeight={Typography.Weight.Medium}\n            fontColor={Typography.Color.Black}\n          >\n            {profile.name}\n          </Typography>\n          <Typography\n            as=\"h2\"\n            variant={Typography.Variant.Title}\n            fontWeight={Typography.Weight.Medium}\n            className={styles.position}\n          >\n            {profile.position}\n          </Typography>\n        </AsideBlock>\n        <AsideBlock title=\"Contacts\">\n          <AsideList>\n            {contacts\n              .map(\n                (contact) =>\n                  [contact, resolveContactRenderData(contact)] as const,\n              )\n              .map(([contact, itemProps]) => (\n                <AsideList.ItemWithIcon\n                  icon={\n                    <span className={styles.iconContainer}>\n                      <ContactIcon\n                        type={contact.type}\n                        role=\"img\"\n                        className={styles.iconContainerIcon}\n                      />\n                    </span>\n                  }\n                  key={contact.type}\n                  {...itemProps}\n                  className={classNames(\n                    styles.contactLink,\n                    itemProps.className,\n                  )}\n                >\n                  <Typography\n                    variant={Typography.Variant.CaptionSM}\n                    fontColor={Typography.Color.LightGray}\n                  >\n                    {CV.ContactType.toLabel(contact.type)}\n                  </Typography>\n                  <Typography\n                    as=\"h5\"\n                    variant={Typography.Variant.ParagraphSM}\n                    fontWeight={Typography.Weight.Medium}\n                  >\n                    {itemProps.children}\n                  </Typography>\n                </AsideList.ItemWithIcon>\n              ))}\n          </AsideList>\n        </AsideBlock>\n        <AsideBlock title=\"Socials\">\n          <AsideList>\n            {socials.map(({ name, profileURL, username, icon }) => (\n              <AsideList.ItemWithIcon\n                icon={\n                  <GatsbyAssetImage\n                    source={icon}\n                    alt={name}\n                    className={styles.socialIcon}\n                  />\n                }\n                as=\"a\"\n                href={profileURL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classNames(\n                  classNames(styles.contactLink, styles.contactLinkHoverable),\n                )}\n                key={name}\n              >\n                <Typography\n                  variant={Typography.Variant.CaptionSM}\n                  fontColor={Typography.Color.LightGray}\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  variant={Typography.Variant.ParagraphSM}\n                  fontWeight={Typography.Weight.Medium}\n                >\n                  {username}\n                </Typography>\n              </AsideList.ItemWithIcon>\n            ))}\n          </AsideList>\n        </AsideBlock>\n        <AsideBlock title=\"Languages\">\n          <AsideList>\n            {languages.map(({ name, level, icon, countryCode }) => (\n              <AsideList.ItemWithIcon\n                icon={\n                  <GatsbyAssetImage\n                    source={icon}\n                    alt={countryCode}\n                    className={styles.flagIcon}\n                  />\n                }\n                key={name}\n              >\n                <Typography\n                  as=\"h5\"\n                  variant={Typography.Variant.ParagraphSM}\n                  fontColor={Typography.Color.DarkGray}\n                  fontWeight={Typography.Weight.Medium}\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  variant={Typography.Variant.CaptionSM}\n                  fontColor={Typography.Color.LightGray}\n                >\n                  {level}\n                </Typography>\n              </AsideList.ItemWithIcon>\n            ))}\n          </AsideList>\n        </AsideBlock>\n      </div>\n    </aside>\n  );\n}\n\nfunction resolveContactRenderData(\n  contact: CV.Contact,\n): { as: ElementType } & PropsOf<'a' | 'div'> {\n  const { type, value } = contact;\n\n  switch (type) {\n    case CV.ContactType.Email:\n      return {\n        as: 'a',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        href: `mailto:${value}`,\n        className: styles.contactLinkHoverable,\n        children: value,\n      };\n    case CV.ContactType.Phone:\n      return {\n        as: 'a',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        href: `tel:${value}`,\n        className: styles.contactLinkHoverable,\n        children: value,\n      };\n    case CV.ContactType.Site:\n      return {\n        as: 'a',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        href: value,\n        className: styles.contactLinkHoverable,\n        children: new URL(value).host,\n      };\n    case CV.ContactType.Location:\n      return {\n        as: 'div',\n        children: value,\n      };\n    default:\n      return assertNever(type);\n  }\n}\n\nfunction ContactIcon({\n  type,\n  ...props\n}: Readonly<{ type: CV.ContactType }> &\n  WithAdditionalClassNameProps &\n  PropsOf<'svg'>): ReactElement {\n  switch (type) {\n    case CV.ContactType.Email:\n      return <MailIcon {...props} />;\n    case CV.ContactType.Phone:\n      return <PhoneIcon {...props} />;\n    case CV.ContactType.Location:\n      return <LocationIcon {...props} />;\n    case CV.ContactType.Site:\n      return <BrowseIcon {...props} />;\n    default:\n      return assertNever(type);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var educationList = \"_2916f\";\nexport var educationListItem = \"_59fab\";\nexport var experienceList = \"aa7cc\";\nexport var experienceListItem = \"_7b961\";\nexport var mainBlock = \"_4c7f5\";\nexport var paragraph = \"c5cac\";\nexport var title = \"_57017\";","import { ReactElement, ReactSVG } from 'react';\n\nexport type SVGDefsProps = Readonly<\n  {\n    children:\n      | ReactElement<unknown, keyof ReactSVG>\n      | readonly ReactElement<unknown, keyof ReactSVG>[];\n  } & ({ singleton: true; id: string } | { singleton?: undefined })\n>;\n\n/* eslint-disable react/destructuring-assignment */\nexport function SVGDefs(props: SVGDefsProps): ReactElement | null {\n  // TODO: svg-singleton\n  return <defs>{props.children}</defs>;\n}\n/* eslint-enable */\n","// extracted by mini-css-extract-plugin\nexport var icon = \"_025ce\";\nexport var svg = \"_627d2\";","import { ReactElement } from 'react';\nimport { SVGDefs } from 'components/svg-defs';\nimport {\n  GatsbyAssetImage,\n  GatsbyAssetImageProps,\n} from 'components/gatsby-asset-image';\nimport classNames from 'classnames';\nimport * as styles from './company-icon.module.scss';\n\nexport function CompanyIcon({\n  className,\n  ...restProps\n}: GatsbyAssetImageProps): ReactElement {\n  return (\n    <>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 48 48\"\n        className={styles.svg}\n      >\n        <SVGDefs singleton id=\"IconShape\">\n          <clipPath id=\"icon-shape\" clipPathUnits=\"objectBoundingBox\">\n            <path\n              d=\"M0.254,0.996 C0.194,0.994,0.162,0.984,0.14,0.975 C0.112,0.964,0.092,0.951,0.07,0.93 C0.049,0.909,0.036,0.888,0.025,0.86 C0.016,0.838,0.006,0.806,0.004,0.746 C0.001,0.682,0,0.663,0,0.5 C0,0.337,0.001,0.318,0.004,0.254 C0.006,0.194,0.016,0.162,0.025,0.14 C0.036,0.112,0.049,0.092,0.07,0.07 C0.091,0.049,0.112,0.036,0.14,0.025 C0.162,0.016,0.194,0.006,0.254,0.004 C0.318,0.001,0.337,0,0.5,0 C0.663,0,0.682,0.001,0.746,0.004 C0.806,0.006,0.838,0.016,0.86,0.025 C0.888,0.036,0.908,0.049,0.93,0.07 C0.951,0.091,0.964,0.112,0.975,0.14 C0.984,0.162,0.994,0.194,0.996,0.254 C0.999,0.318,1,0.337,1,0.5 C1,0.663,0.999,0.682,0.996,0.746 C0.994,0.806,0.984,0.838,0.975,0.86 C0.964,0.888,0.951,0.909,0.93,0.93 C0.909,0.951,0.888,0.964,0.86,0.975 C0.838,0.984,0.806,0.994,0.746,0.996 C0.682,0.999,0.663,1,0.5,1 C0.337,1,0.318,0.999,0.254,0.996\"\n              fill=\"#fff\"\n            />\n          </clipPath>\n        </SVGDefs>\n      </svg>\n      <GatsbyAssetImage\n        {...restProps}\n        // eslint-disable-next-line react/destructuring-assignment\n        className={classNames(styles.icon, className)}\n      />\n    </>\n  );\n}\n","import { getDateMonth, isSomething, optionalMap } from 'utils';\n\nexport function formatDates(\n  dateStarted: Date,\n  dateEnded: Date | string | undefined,\n): string {\n  return [\n    formatDate(dateStarted),\n    optionalMap(dateEnded, (endedAt) =>\n      endedAt instanceof Date ? formatDate(endedAt) : endedAt,\n    ),\n  ]\n    .filter(isSomething)\n    .join(' - ');\n}\n\nexport function formatDate(date: Date): string {\n  return `${getDateMonth(date).substring(0, 3)} ${date.getFullYear()}`;\n}\n\nexport function formatDuration(\n  dateA: Date,\n  dateB = new Date(Date.now()),\n): string {\n  const difference = Math.abs(dateA.getTime() - dateB.getTime());\n  const mothsDifference = Math.floor(difference / 1000 / 60 / 60 / 24 / 30);\n\n  const years = Math.floor(mothsDifference / 12);\n  const months = (mothsDifference % 12) + 1;\n\n  return [\n    years > 0 ? `${years} yr${years > 1 ? 's' : ''}` : undefined,\n    `${months} ${months > 1 ? 'mos' : 'mon'}`,\n  ]\n    .filter(isSomething)\n    .join(' ');\n}\n","// extracted by mini-css-extract-plugin\nexport var education = \"b8bf6\";\nexport var educationCertificate = \"_52e4f\";\nexport var educationCertificateIcon = \"bc329\";\nexport var educationCertificateIconContainer = \"_3e94b\";\nexport var educationCompanyLogo = \"b3cd3\";\nexport var educationContent = \"_9e24e\";\nexport var educationInfo = \"_84f46\";\nexport var themeChangingDuration = \"200\";\nexport var typography = \"_38f55\";\nexport var typographyAccentColor = \"fc0b0\";\nexport var typographyBlack = \"_15235\";\nexport var typographyBlackColor = \"_47fe9\";\nexport var typographyBold = \"be1ab\";\nexport var typographyCaptionMd = \"_6ad3f\";\nexport var typographyCaptionSm = \"cfe96\";\nexport var typographyDarkGrayColor = \"e3318\";\nexport var typographyDemiBold = \"_23789\";\nexport var typographyExtraBold = \"_808ba\";\nexport var typographyExtraLight = \"b61cd\";\nexport var typographyGrayColor = \"ad888\";\nexport var typographyHeading = \"_3d1d4\";\nexport var typographyInline = \"_918aa\";\nexport var typographyItalic = \"e054f\";\nexport var typographyLight = \"cfa2b\";\nexport var typographyLightGrayColor = \"_69a37\";\nexport var typographyLinked = \"cf0eb\";\nexport var typographyMedium = \"a1caa\";\nexport var typographyNoWrap = \"_91f2d\";\nexport var typographyParagraphMd = \"_4cc8e\";\nexport var typographyParagraphSm = \"b8151\";\nexport var typographyRegular = \"_4dc91\";\nexport var typographyThin = \"_2d9e1\";\nexport var typographyTitle = \"_1edce\";\nexport var typographyWhiteColor = \"_84f1f\";","import { ReactElement, useMemo } from 'react';\nimport { Typography } from 'components/typography';\nimport { isSomething } from 'utils';\nimport AttachmentIcon from 'assets/icons/attachment.inline.svg';\nimport { CV } from 'components/cv';\nimport { CompanyIcon } from './company-icon.component';\nimport { formatDates } from './dates';\nimport * as styles from './education.module.scss';\n\nexport function Education({\n  companyLogo,\n  companyURL,\n  courseName,\n  dateStarted,\n  dateEnded,\n  description,\n  certificateURL,\n}: CV.InnerContentDataType<CV.Education>): ReactElement {\n  const fromDate = useMemo(() => new Date(dateStarted), [dateStarted]);\n  const toDate = useMemo(\n    () => (dateEnded ? new Date(dateEnded) : undefined),\n    [dateEnded],\n  );\n\n  return (\n    <div className={styles.education}>\n      <div className={styles.educationContent}>\n        <CompanyIcon\n          alt={`${courseName} logo`}\n          className={styles.educationCompanyLogo}\n          source={companyLogo}\n        />\n        <div className={styles.educationInfo}>\n          <Typography\n            as=\"h2\"\n            variant={Typography.Variant.ParagraphMD}\n            fontWeight={Typography.Weight.Medium}\n            fontColor={Typography.Color.Black}\n            nowrap\n            {...resolveCompanyProps(companyURL)}\n          >\n            {courseName}\n          </Typography>\n          {isSomething(description) && (\n            <Typography\n              as=\"h3\"\n              variant={Typography.Variant.CaptionSM}\n              fontColor={Typography.Color.DarkGray}\n              nowrap\n            >\n              {description}\n            </Typography>\n          )}\n          <Typography\n            variant={Typography.Variant.CaptionSM}\n            fontColor={Typography.Color.Gray}\n            nowrap\n          >\n            {formatDates(fromDate, toDate)}\n          </Typography>\n          {isSomething(certificateURL) && (\n            <Typography\n              as=\"a\"\n              href={certificateURL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              variant={Typography.Variant.CaptionSM}\n              className={styles.educationCertificate}\n              nowrap\n            >\n              <span className={styles.educationCertificateIconContainer}>\n                <AttachmentIcon\n                  role=\"img\"\n                  className={styles.educationCertificateIcon}\n                />\n              </span>\n              <span>Course certificate</span>\n            </Typography>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction resolveCompanyProps(companyURL: string | undefined): Typography.Props {\n  return isSomething(companyURL)\n    ? {\n        as: 'a',\n        href: companyURL,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      }\n    : {};\n}\n","// extracted by mini-css-extract-plugin\nexport var experience = \"_4dcce\";\nexport var experienceCompanyInfo = \"_5f318\";\nexport var experienceCompanyLogo = \"_0a285\";\nexport var experienceCompanyName = \"a5f68\";\nexport var experienceContent = \"_42055\";\nexport var experienceDates = \"f0c41\";\nexport var experienceHeader = \"c53af\";\nexport var experienceLocation = \"c1dbe\";\nexport var experienceMetric = \"_5718c\";\nexport var experienceMetricIcon = \"_5366a\";\nexport var experienceMetrics = \"edaca\";\nexport var experienceParagraph = \"a01c1\";\nexport var themeChangingDuration = \"200\";\nexport var typography = \"bce42\";\nexport var typographyAccentColor = \"e95c2\";\nexport var typographyBlack = \"_65d45\";\nexport var typographyBlackColor = \"a2770\";\nexport var typographyBold = \"_1c543\";\nexport var typographyCaptionMd = \"d5fc7\";\nexport var typographyCaptionSm = \"_0a408\";\nexport var typographyDarkGrayColor = \"_9fa9f\";\nexport var typographyDemiBold = \"ebbaf\";\nexport var typographyExtraBold = \"_08deb\";\nexport var typographyExtraLight = \"_17fc4\";\nexport var typographyGrayColor = \"fd329\";\nexport var typographyHeading = \"_0e25a\";\nexport var typographyInline = \"_3fd0d\";\nexport var typographyItalic = \"_51f14\";\nexport var typographyLight = \"_782c9\";\nexport var typographyLightGrayColor = \"_658ab\";\nexport var typographyLinked = \"_55916\";\nexport var typographyMedium = \"_11dd8\";\nexport var typographyNoWrap = \"_8eec6\";\nexport var typographyParagraphMd = \"_8c569\";\nexport var typographyParagraphSm = \"_4fbe9\";\nexport var typographyRegular = \"dc09b\";\nexport var typographyThin = \"_28b3f\";\nexport var typographyTitle = \"_638b0\";\nexport var typographyWhiteColor = \"_49952\";","import { ReactElement, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Typography } from 'components/typography';\nimport LocationIcon from 'assets/icons/location.inline.svg';\nimport { isSomething } from 'utils';\nimport { CV } from 'components/cv';\nimport { CompanyIcon } from './company-icon.component';\nimport { formatDates, formatDuration } from './dates';\nimport * as styles from './experience.module.scss';\n\nexport function Experience({\n  companyName,\n  companyLogo,\n  companyURL,\n  position,\n  description,\n  dateStarted,\n  dateEnded,\n  location,\n}: CV.InnerContentDataType<CV.Experience>): ReactElement {\n  const fromDate = useMemo(() => new Date(dateStarted), [dateStarted]);\n  const toDate = useMemo(\n    () => (dateEnded ? new Date(dateEnded) : undefined),\n    [dateEnded],\n  );\n\n  return (\n    <div className={styles.experience}>\n      <div className={styles.experienceContent}>\n        <div className={styles.experienceHeader}>\n          <CompanyIcon\n            alt={`${companyName} logo`}\n            className={styles.experienceCompanyLogo}\n            source={companyLogo}\n          />\n          <div className={styles.experienceCompanyInfo}>\n            <div>\n              <Typography\n                as=\"h2\"\n                variant={Typography.Variant.ParagraphMD}\n                fontWeight={Typography.Weight.Medium}\n                fontColor={Typography.Color.Black}\n                className={styles.experienceCompanyName}\n                nowrap\n                {...resolveCompanyProps(companyURL)}\n              >\n                {companyName}\n              </Typography>\n              <Typography\n                as=\"h3\"\n                variant={Typography.Variant.CaptionMD}\n                fontColor={Typography.Color.DarkGray}\n                nowrap\n              >\n                {position}\n              </Typography>\n            </div>\n            <div className={styles.experienceMetrics}>\n              <Typography\n                variant={Typography.Variant.CaptionSM}\n                fontColor={Typography.Color.LightGray}\n                className={classNames(\n                  styles.experienceMetric,\n                  styles.experienceDates,\n                )}\n                nowrap\n              >\n                {formatDates(fromDate, toDate ?? 'Present')}\n                {' · '}\n                {formatDuration(fromDate, toDate)}\n              </Typography>\n              <Typography\n                variant={Typography.Variant.CaptionSM}\n                fontColor={Typography.Color.LightGray}\n                className={classNames(\n                  styles.experienceMetric,\n                  styles.experienceLocation,\n                )}\n                nowrap\n              >\n                <LocationIcon\n                  role=\"img\"\n                  className={styles.experienceMetricIcon}\n                />\n                {location}\n              </Typography>\n            </div>\n          </div>\n        </div>\n        <div>\n          {description.map(({ variant, color, weight, text }, index) => (\n            <Typography\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              variant={variant ?? Typography.Variant.ParagraphSM}\n              fontColor={color}\n              fontWeight={weight}\n              className={styles.experienceParagraph}\n            >\n              {text}\n            </Typography>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction resolveCompanyProps(companyURL: string | undefined): Typography.Props {\n  return isSomething(companyURL)\n    ? {\n        as: 'a',\n        href: companyURL,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      }\n    : {};\n}\n","import { PropsWithChildren, ReactElement, ReactNode } from 'react';\nimport { Typography } from 'components/typography';\nimport { assertNever } from 'utils';\nimport { CV } from 'components/cv';\nimport * as styles from './main-block.module.scss';\nimport { Education } from './education.component';\nimport { Experience } from './experience.component';\n\ntype MainBlockProps = PropsWithChildren<Readonly<{ content: CV.Content }>>;\n\nexport function MainBlock({ content }: MainBlockProps): ReactElement {\n  const renderContent = (): ReactNode => {\n    const { type } = content;\n\n    switch (type) {\n      case CV.ContentType.Text:\n        return content.data.map(({ variant, color, weight, text }, index) => (\n          <Typography\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            variant={variant ?? Typography.Variant.ParagraphMD}\n            fontColor={color}\n            fontWeight={weight}\n            className={styles.paragraph}\n          >\n            {text}\n          </Typography>\n        ));\n      case CV.ContentType.Education:\n        return (\n          <ul className={styles.educationList}>\n            {content.data.map((education, index) => (\n              <li\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                className={styles.educationListItem}\n              >\n                <Education\n                  companyLogo={education.companyLogo}\n                  companyURL={education.companyURL}\n                  courseName={education.courseName}\n                  dateStarted={education.dateStarted}\n                  dateEnded={education.dateEnded}\n                  description={education.description}\n                  certificateURL={education.certificateURL}\n                />\n              </li>\n            ))}\n          </ul>\n        );\n      case CV.ContentType.Experience:\n        return (\n          <ul className={styles.experienceList}>\n            {content.data.map((experience, index) => (\n              <li\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                className={styles.experienceListItem}\n              >\n                <Experience\n                  companyName={experience.companyName}\n                  companyLogo={experience.companyLogo}\n                  companyURL={experience.companyURL}\n                  dateStarted={experience.dateStarted}\n                  dateEnded={experience.dateEnded}\n                  description={experience.description}\n                  location={experience.location}\n                  position={experience.position}\n                />\n              </li>\n            ))}\n          </ul>\n        );\n      default:\n        return assertNever(type);\n    }\n  };\n\n  return (\n    <section className={styles.mainBlock}>\n      <Typography\n        variant={Typography.Variant.Title}\n        fontColor={Typography.Color.Black}\n        fontWeight={Typography.Weight.Medium}\n        className={styles.title}\n      >\n        {content.title}\n      </Typography>\n      {renderContent()}\n    </section>\n  );\n}\n","import { ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { OutboundLink } from 'gatsby-plugin-google-gtag';\nimport { WithOptionalClassNameProps } from 'types';\nimport { useSitePathPrefix } from 'hooks';\nimport DownloadIcon from 'assets/icons/download.inline.svg';\nimport * as styles from './download-button.module.scss';\n\nexport type DownloadButtonProps = Readonly<{\n  url: string;\n}> &\n  WithOptionalClassNameProps;\n\nexport function DownloadButton({\n  url,\n  className,\n}: DownloadButtonProps): ReactElement {\n  const pathPrefix = useSitePathPrefix();\n\n  return (\n    <OutboundLink\n      href={pathPrefix + url}\n      target=\"_blank\"\n      className={classNames(styles.downloadButton, className)}\n    >\n      Download CV\n      <DownloadIcon className={styles.downloadButtonIcon} />\n    </OutboundLink>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var downloadButton = \"c5212\";\nexport var downloadButtonIcon = \"c30b7\";\nexport var themeChangingDuration = \"200\";","// extracted by mini-css-extract-plugin\nexport var aside = \"_465b4\";\nexport var content = \"_8ea66\";\nexport var controls = \"_75c10\";\nexport var controlsScrollingDown = \"cdcfd\";\nexport var main = \"a71a9\";\nexport var root = \"b7ebd\";\nexport var themeChangingDuration = \"200\";\nexport var themeToggler = \"_4a948\";\nexport var wrapper = \"_5b0ba\";","import { ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { ThemeToggler } from 'components/theme';\nimport { RootClassName } from 'components/root-classname';\nimport { useCV } from 'components/cv';\nimport { ScrollDirection, useScrollDirection } from 'hooks';\nimport { AsideComponent } from './aside';\nimport { MainBlock } from './main-block';\nimport { DownloadButton } from './download-button.component';\nimport * as styles from './cv.module.scss';\n\nexport function CVDocument(): ReactElement {\n  const { body } = useCV();\n\n  return (\n    <RootClassName className={styles.root}>\n      <div className={styles.wrapper}>\n        <article className={styles.content}>\n          <AsideComponent asideClassName={styles.aside} />\n          <main className={styles.main}>\n            {body.map((content, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <MainBlock key={index} content={content} />\n            ))}\n          </main>\n        </article>\n        <Controls />\n      </div>\n    </RootClassName>\n  );\n}\n\nfunction Controls(): ReactElement {\n  const { pdfURL } = useCV();\n  const scrollDirection = useScrollDirection({ threshold: 50 });\n\n  return (\n    <div\n      className={classNames(\n        styles.controls,\n        scrollDirection === ScrollDirection.Down &&\n          styles.controlsScrollingDown,\n      )}\n    >\n      <DownloadButton url={pdfURL} />\n      <ThemeToggler className={styles.themeToggler} />\n    </div>\n  );\n}\n","import { ReactElement } from 'react';\nimport { PageProps } from 'gatsby';\nimport { Page } from 'components/page';\nimport { CVProvider, CV } from 'components/cv';\nimport { CVDocument } from './cv.component';\n\nexport default function CVPage({\n  pageContext,\n}: PageProps<unknown, { cv: CV }>): ReactElement {\n  return (\n    <Page title={`${pageContext.cv.profile.name} CV`}>\n      <CVProvider cv={pageContext.cv}>\n        <CVDocument />\n      </CVProvider>\n    </Page>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var themeChangingDuration = \"200\";\nexport var typography = \"_0a0fb\";\nexport var typographyAccentColor = \"_3c5a1\";\nexport var typographyBlack = \"_1915b\";\nexport var typographyBlackColor = \"_79bbf\";\nexport var typographyBold = \"b8ddc\";\nexport var typographyCaptionMd = \"_08088\";\nexport var typographyCaptionSm = \"_0cd33\";\nexport var typographyDarkGrayColor = \"_97ae7\";\nexport var typographyDemiBold = \"_9d2a2\";\nexport var typographyExtraBold = \"dabd6\";\nexport var typographyExtraLight = \"c9292\";\nexport var typographyGrayColor = \"c0681\";\nexport var typographyHeading = \"_98b95\";\nexport var typographyInline = \"df4d3\";\nexport var typographyItalic = \"_6d12e\";\nexport var typographyLight = \"ad66c\";\nexport var typographyLightGrayColor = \"ea6b7\";\nexport var typographyLinked = \"_008f5\";\nexport var typographyMedium = \"c7c91\";\nexport var typographyNoWrap = \"_66873\";\nexport var typographyParagraphMd = \"_157ee\";\nexport var typographyParagraphSm = \"f7ee7\";\nexport var typographyRegular = \"e3316\";\nexport var typographyThin = \"cfddb\";\nexport var typographyTitle = \"dfdc9\";\nexport var typographyWhiteColor = \"_7c073\";","var React = require('react');\n\nfunction AttachmentInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Attachment icon\"),React.createElement(\"path\",{\"d\":\"M2.52709 7.55627C1.68452 7.55627 0.924916 7.04872 0.602426 6.27032C0.279935 5.49191 0.458063 4.59588 1.05376 4.00001L1.93793 3.11584L2.52709 3.70501L1.64334 4.58876C1.32753 4.90457 1.2042 5.36487 1.31979 5.79627C1.43538 6.22767 1.77235 6.56463 2.20375 6.68023C2.63515 6.79582 3.09545 6.67248 3.41126 6.35668L4.29501 5.47293L4.88418 6.06251L4.00043 6.94626C3.61046 7.33815 3.07995 7.55779 2.52709 7.55627ZM2.82168 5.76751L2.23251 5.17834L5.17876 2.23209L5.76793 2.82126L2.82209 5.76709L2.82168 5.76751ZM6.06293 4.88376L5.47334 4.29459L6.35709 3.41084C6.6772 3.09598 6.80384 2.63362 6.68886 2.19958C6.57388 1.76555 6.23494 1.42653 5.80093 1.31144C5.36692 1.19636 4.90453 1.32289 4.58959 1.64293L3.70543 2.52668L3.11626 1.93751L4.00043 1.05334C4.81504 0.245828 6.12917 0.248705 6.94024 1.05978C7.75131 1.87085 7.75419 3.18497 6.94668 3.99959L6.06293 4.88334V4.88376Z\",\"key\":1})]);\n}\n\nAttachmentInline.defaultProps = {\"viewBox\":\"0 0 8 8\"};\n\nmodule.exports = AttachmentInline;\n\nAttachmentInline.default = AttachmentInline;\n","var React = require('react');\n\nfunction BrowseInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Browse icon\"),React.createElement(\"path\",{\"d\":\"M0 10.0001C0 4.48012 4.47 0.00012207 10 0.00012207C15.52 0.00012207 20 4.48012 20 10.0001C20 15.5301 15.52 20.0001 10 20.0001C4.47 20.0001 0 15.5301 0 10.0001ZM12.23 11.8301L13.85 6.71012C13.96 6.36012 13.64 6.03012 13.29 6.14012L8.17 7.74012C7.96 7.81012 7.79 7.97012 7.73 8.18012L6.13 13.3101C6.02 13.6501 6.35 13.9801 6.69 13.8701L11.79 12.2701C12 12.2101 12.17 12.0401 12.23 11.8301Z\",\"key\":1})]);\n}\n\nBrowseInline.defaultProps = {\"viewBox\":\"0 0 20 20\"};\n\nmodule.exports = BrowseInline;\n\nBrowseInline.default = BrowseInline;\n","var React = require('react');\n\nfunction DownloadInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Download icon\"),React.createElement(\"path\",{\"opacity\":\"0.4\",\"d\":\"M17.554 7.29619C20.005 7.29619 22 9.35598 22 11.8876V16.9199C22 19.4454 20.01 21.5 17.564 21.5L6.448 21.5C3.996 21.5 2 19.4412 2 16.9096V11.8773C2 9.35185 3.991 7.29619 6.438 7.29619H7.378L17.554 7.29619Z\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M12.5462 16.0374L15.4552 13.0695C15.7552 12.7627 15.7552 12.2691 15.4532 11.9634C15.1512 11.6587 14.6642 11.6597 14.3642 11.9654L12.7712 13.5905L12.7712 3.2821C12.7712 2.85042 12.4262 2.5 12.0002 2.5C11.5752 2.5 11.2312 2.85042 11.2312 3.2821L11.2312 13.5905L9.63718 11.9654C9.33718 11.6597 8.85018 11.6587 8.54818 11.9634C8.39718 12.1168 8.32118 12.3168 8.32118 12.518C8.32118 12.717 8.39718 12.9171 8.54618 13.0695L11.4552 16.0374C11.6002 16.1847 11.7962 16.268 12.0002 16.268C12.2052 16.268 12.4012 16.1847 12.5462 16.0374Z\",\"key\":2})]);\n}\n\nDownloadInline.defaultProps = {\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = DownloadInline;\n\nDownloadInline.default = DownloadInline;\n","var React = require('react');\n\nfunction LocationInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Location icon\"),React.createElement(\"path\",{\"d\":\"M0.5 8.31776C0.5 3.71789 4.34388 0 8.99345 0C13.6561 0 17.5 3.71789 17.5 8.31776C17.5 10.6357 16.657 12.7876 15.2695 14.6116C13.7388 16.6235 11.8522 18.3765 9.72854 19.7524C9.24251 20.0704 8.80387 20.0944 8.27045 19.7524C6.13474 18.3765 4.24809 16.6235 2.7305 14.6116C1.34198 12.7876 0.5 10.6357 0.5 8.31776ZM6.19423 8.57675C6.19423 10.1177 7.45166 11.3297 8.99345 11.3297C10.5362 11.3297 11.8058 10.1177 11.8058 8.57675C11.8058 7.0478 10.5362 5.77683 8.99345 5.77683C7.45166 5.77683 6.19423 7.0478 6.19423 8.57675Z\",\"key\":1})]);\n}\n\nLocationInline.defaultProps = {\"viewBox\":\"0 0 18 20\"};\n\nmodule.exports = LocationInline;\n\nLocationInline.default = LocationInline;\n","var React = require('react');\n\nfunction MailInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Mail icon\"),React.createElement(\"path\",{\"d\":\"M14.9395 0C16.2805 0 17.5705 0.53 18.5195 1.481C19.4695 2.43 20.0005 3.71 20.0005 5.05V12.95C20.0005 15.74 17.7305 18 14.9395 18H5.06049C2.26949 18 0.000488281 15.74 0.000488281 12.95V5.05C0.000488281 2.26 2.25949 0 5.06049 0H14.9395ZM16.5305 6.54L16.6105 6.46C16.8495 6.17 16.8495 5.75 16.5995 5.46C16.4605 5.311 16.2695 5.22 16.0705 5.2C15.8605 5.189 15.6605 5.26 15.5095 5.4L11.0005 9C10.4205 9.481 9.58949 9.481 9.00049 9L4.50049 5.4C4.18949 5.17 3.75949 5.2 3.50049 5.47C3.23049 5.74 3.20049 6.17 3.42949 6.47L3.56049 6.6L8.11049 10.15C8.67049 10.59 9.34949 10.83 10.0605 10.83C10.7695 10.83 11.4605 10.59 12.0195 10.15L16.5305 6.54Z\",\"key\":1})]);\n}\n\nMailInline.defaultProps = {\"viewBox\":\"0 0 20 18\"};\n\nmodule.exports = MailInline;\n\nMailInline.default = MailInline;\n","var React = require('react');\n\nfunction PhoneInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Phone icon\"),React.createElement(\"path\",{\"d\":\"M9.53174 10.4724C13.5208 14.4604 14.4258 9.84672 16.9656 12.3848C19.4143 14.8328 20.8216 15.3232 17.7192 18.4247C17.3306 18.737 14.8616 22.4943 6.1846 13.8197C-2.49348 5.144 1.26158 2.67244 1.57397 2.28395C4.68387 -0.826154 5.16586 0.589383 7.61449 3.03733C10.1544 5.5765 5.54266 6.48441 9.53174 10.4724Z\",\"key\":1})]);\n}\n\nPhoneInline.defaultProps = {\"viewBox\":\"0 0 20 20\"};\n\nmodule.exports = PhoneInline;\n\nPhoneInline.default = PhoneInline;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_interopRequireDefault","require","exports","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_excluded","OutboundLink","default","forwardRef","_ref","ref","children","props","createElement","onClick","e","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","target","toLowerCase","window","gtag","event_category","event_label","href","transport_type","event_callback","document","location","propTypes","string","func","Page","title","React","Helmet","defaultTitle","titleTemplate","lang","Variant","Weight","Color","Typography","variant","ParagraphMD","as","ComponentToRender","Heading","Title","CaptionSM","CaptionMD","ParagraphSM","assertNever","resolveDefaultTagNameFromVariant","fontWeight","fontColor","inline","italic","nowrap","className","innerRef","restProps","classNames","styles","optionalMap","resolveClassNameFromColor","resolveClassNameFromWeight","resolveClassNameFromVariant","weight","ExtraLight","Light","Thin","Regular","Medium","DemiBold","Bold","ExtraBold","Black","color","DarkGray","Gray","LightGray","Accent","White","CVContext","createContext","undefined","CVProvider","cv","Provider","value","ContactType","ContentType","useCV","createUseContext","CV","type","Email","Phone","Location","Site","GatsbyImageAsset","asset","extension","GatsbyAssetImage","source","alt","isSVG","svg","dangerouslySetInnerHTML","__html","content","src","publicURL","GatsbyImage","image","unwrap","getImage","childImageSharp","gatsbyImageData","AsideBlock","isSomething","AsideList","Children","child","index","key","icon","contactLink","contactLinkHoverable","AsideComponent","asideClassName","profile","contacts","socials","languages","avatar","name","position","map","contact","resolveContactRenderData","itemProps","ItemWithIcon","ContactIcon","role","toLabel","profileURL","username","rel","level","countryCode","URL","host","MailIcon","PhoneIcon","LocationIcon","BrowseIcon","SVGDefs","CompanyIcon","xmlns","viewBox","singleton","id","clipPathUnits","d","fill","formatDates","dateStarted","dateEnded","formatDate","endedAt","Date","filter","join","date","getDateMonth","substring","getFullYear","Education","companyLogo","companyURL","courseName","description","certificateURL","fromDate","useMemo","toDate","resolveCompanyProps","AttachmentIcon","experienceMetric","Experience","companyName","dateA","dateB","now","difference","Math","abs","getTime","mothsDifference","floor","years","months","formatDuration","text","MainBlock","Text","data","education","experience","renderContent","DownloadButton","url","pathPrefix","useSitePathPrefix","DownloadIcon","CVDocument","body","RootClassName","Controls","pdfURL","scrollDirection","useScrollDirection","threshold","ScrollDirection","ThemeToggler","CVPage","pageContext","typography","typographyAccentColor","typographyBlack","typographyBlackColor","typographyBold","typographyCaptionMd","typographyCaptionSm","typographyDarkGrayColor","typographyDemiBold","typographyExtraBold","typographyExtraLight","typographyGrayColor","typographyHeading","typographyInline","typographyItalic","typographyLight","typographyLightGrayColor","typographyLinked","typographyMedium","typographyNoWrap","typographyParagraphMd","typographyParagraphSm","typographyRegular","typographyThin","typographyTitle","typographyWhiteColor","AttachmentInline","defaultProps","module","BrowseInline","DownloadInline","LocationInline","MailInline","PhoneInline","_objectWithoutPropertiesLoose","excluded","i","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}